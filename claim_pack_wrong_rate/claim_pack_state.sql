WITH filter_item AS 
	(SELECT * 
	, CASE 
		WHEN sum(ifnull(eli_max_rate_cd,0)) OVER (PARTITION BY prmtn_comp_idnt, supplier,sku_id) != 0 THEN 'YES'
		ELSE 'NO'
	END FILTER_ITEM
	, sum(CASE WHEN CLM_QTY IS NULL THEN 0 ELSE CLM_QTY END) OVER (PARTITION BY prmtn_comp_idnt, supplier,sku_id) CLM_QTY_ITEM
	, sum(CASE WHEN PROMO_QTY IS NULL THEN 0 ELSE PROMO_QTY END) OVER (PARTITION BY prmtn_comp_idnt, supplier,sku_id) PROMO_QTY_ITEM
	, sum(CASE WHEN SLS_QTY_ALL IS NULL THEN 0 ELSE SLS_QTY_ALL END) OVER (PARTITION BY prmtn_comp_idnt, supplier,sku_id) SLS_QTY_ALL_ITEM
	, CASE 
		WHEN sum(CASE WHEN CLM_QTY IS NULL THEN 0 ELSE CLM_QTY END) OVER (PARTITION BY prmtn_comp_idnt, supplier,sku_id) >  sum(CASE WHEN PROMO_QTY IS NULL THEN 0 ELSE PROMO_QTY END) OVER (PARTITION BY prmtn_comp_idnt, supplier,sku_id)  THEN sum(CASE WHEN SLS_QTY_ALL IS NULL THEN 0 ELSE SLS_QTY_ALL END) OVER (PARTITION BY prmtn_comp_idnt, supplier,sku_id)
		ELSE sum(CASE WHEN PROMO_QTY IS NULL THEN 0 ELSE PROMO_QTY END) OVER (PARTITION BY prmtn_comp_idnt, supplier,sku_id)
	END OUTPUT_QTY
	FROM COLES.STI_WIP_CS.VIEW_PROMO_DETAIL_COMBINED_MERGED
	WHERE 
		-- to_char(PRMTN_COMP_DTL_END_DT,'YYYYMM') = '202201' 
		-- and PRMTN_TYPE_CDE in ('SP','TH')
		-- AND PRM_TICKET NOT ILIKE '%down%down%'
		-- AND PRM_TICKET NOT ILIKE '%every%day%'
		prmtn_comp_idnt = '55591111'
		-- and PRMTN_TYPE_CDE in ('SP','TH')
		-- and  PRMTN_COMP_DTL_END_DT between '2022-1-01' and '2022-1-31'
		-- prmtn_comp_idnt = '55564790'
		-- AND PRMTN_COMP_IDNT NOT IN ('55887782','55779867','56069186','56106974','56069192','56106971','55807213','55871346','56166301','55872103','55956446','55807314','55871390','55872002','55807268','55871272','56159764','56159763','56361305','56176344','56176345','56190590','55978715','56011272','56011274','56011277','55807235','55805158','55921480','55805105','55920986','55921793','55807339','56157511','55889373','55920995','56410561','55847629','55848431','56185853','55890000','55890128','55921060','55921297','55977475','55848072','56140833','56141079','56141259','56141439','56141559','56141679','56141919','56141967','56142027','56142117','56142207','56143103','56143358','56143433','56143508','56143583','56143613','56143709','56143799','56144039','56144159','56144349','56228398','56228644','56228830','56228920','56229010','56229130','56229250','56229490','56229538','56229598','56229718','56229838','56230735','56231065','56231215','56231251','56231341','56231671','56231791','56231911','56231972','56269147','56269207','56269477','56269687','56270048','56270096','56270156','56270276','56270396','56270636','56270800','56271202','56271292','56271622','56271777','56271813','56272143','56272233','56272593','56272653','56291331','56292049','56292441','56293138','56293269','56293419','56293629','56293837','56294289','56294633','56295479','56295623','56295983','56296133','56296169','56296739','56297669','56297849','56276826','56277156','56277246','56277486','56277726','56277774','56277834','56277954','56278074','56278314','56278478','56278880','56278970','56279300','56279450','56279486','56279816','56280266','56280326','55848409','55871746','55890004','55890114','55847756','55848111','55980569','55984340','56232542','55847632','55871284','55920873','55920874','55921485','55921836','55978726','56058858','56058859','55848497','56178938','56179082','55866197','55871519','55890074','55921594','55979282','56211012','55978904','55978969','56368435','55879832','55848015','55871162','55871163','55871598','55871747','55871748','55871884','55871885','55889557','55890148','55890405','55890480','55921034','55921190','55921351','55922002','55921734','55978718','55978892','55980571','56208690','55848219','56178491','55847991','55847990','55920915','55921556','55848200','55890445','55921802','55848546','55871460','55847809','55848361','56002279','55889614','56002295','56002280','55979235','56166305','55848081','55921688','55946469','55977604','55848033','55922248','55871796','55872161','55921568','55977471','55979351','56212515','56352000','55910074','55910076','55977396','56219657','56224675','56241814','56391784','55847931','55889566','55979329','56410552','55847962','55921698','55807312','55871503','55871662','55921402','55847951','55890168','55864548','55871302','55871456','55848056','56014511','55848449','55971498','55848505','55848506','55871463','55871620','55890173','55890499','56161243','55978918','55979211','56166209','56166224','55847669','55847812','55847888','56209119','56209120','56170494','56170679','56170919','56170979','56171072','56171162','56171253','56171433','56171523','56171643','56171763','56171817','56171871','56174933','56175263','56175473','56175593','56175743','56175893','56176073','56216194','56216314','56242291','56242351','56242591','56242681','56242771','56242891','56243011','56243647','56243827','56243887','56243947','56244217','56244397','56244487','56244607','56244727','56244781','56290875','56291271','56291421','56291611','56291864','56292081','56293221','56293545','56293689','56293869','56294403','56294723','56294879','56295078','56295319','56295509','56302433','56302493','56302733','56302823','56302913','56303033','56303153','56303723','56303903','56303963','56304023','56304683','56304803','56304857','56329972','56330062','56296799','56297309','56297459','56297609','56297815','56298029','56298659','56298839','56298899','56299739','56299949','56300183','56300297','56330152','56330242','56126397','56126719','56126809','56126833','56126863','56127103','56127343','56127463','56127541','56127601','56127771','56199000','56199923','56200043','56200163','56210730','56249404','56249527','56249647','56249767','56249811','56249901','56249925','56249955','56250063','56250095','56250119','56250823','56251076','56251285','56251482','56251681','56281340','56282018','56282558','56301413','56301953','56289749','55848455','55890290','55921164','55847737','55848159','55908079','55978989','55979166','55979313','55848572','55847838','55890034','55977523','55848231','55979076','55848099','56127857','55871595','55872034','55872033','55889713','55889993','55890269','55913964','55920876','55921157','55921285','55921665','55928630','55977491','55977511','55978862','55979374','55806624','55848326','55847998','55821549','55848127','55977712','55847982','55847982','55848641','55848674','55871324','56054591','55921235','55922050','55977344','55978941','55847978','55871556','55871965','55872245','55922072','55979449','55848535','55871094','55890501','56256593','55848233','55920901','55847650','55848619','55978731','55978902','56155757','55848588','56002326','55847783','55848442','55847959','55848090','55848502','56217513','56179093','56179094','55978759','55847766','55871270','55730411','55732032','55851907','55921483','56087052','55847862','55848651','55978749','56002708','56017235','56017252','55848174','55890456','55978707','56093948','56093949','56157528','56217281','56309683','55851907','55921483','55848404','55872115','55921741','55753660','55848105','55890027','55847985','55847604','55847666','56209124','56028344','55848223','56017257','55905021','55871299','55871936','55921854','56320130','55871440','55889572','55979375','56113695','56052498','55889649','55977633','56176361','55848504','55871554','55872009','55780898','55920833','55978696','55978833','55871940','55890099','56261420','55871687','55871933','55921068','55921953','56206149','55921990','56206153','55871645','55871646','55921557','56149150','56205122','55871827','56232493','55978998','55872210','55871464','56059281','55922004','56059796','55871875','55890300','55921982','55908036','55872207','56144750','55978755','55871175','55871551','55871582','55921805','55871125','55890657','55890639','55921430','55871820','55871981','55921758','56111049','55871704','55977461','55871939','56111490','55871966','55889463','55920758','55921775','55871840','55872050','56069076','55889907','55956796','55871204','55921392','56210405','56210404')
	),
check_column_filter as
	(SELECT * 
	,CASE  
		WHEN max(CASE WHEN DNA_ACTION IS NOT NULL AND DNA_ACTION NOT IN ('START TO REVIEW 11/2023','QUERY CM') THEN 1 ELSE 0 end) OVER (PARTITION BY prmtn_comp_idnt, supplier) = 1 THEN 'DNA/START IN 2/2024'
		WHEN SUM(CASE WHEN CLM_QTY IS NULL THEN 0 ELSE CLM_QTY END) OVER (PARTITION BY prmtn_comp_idnt, supplier) < 0 THEN 'CLM_QTY < 0'
		WHEN MAX(CASE WHEN OVERLAP_STARTDATE!= 1 THEN 0 ELSE 1 END) over (PARTITION BY prmtn_comp_idnt, supplier) + MAX(CASE WHEN OVERLAP_ENDDATE!= 1 THEN 0 ELSE 1 END) over (PARTITION BY prmtn_comp_idnt, supplier) = 0 THEN 'OVERLAP'
		WHEN max(CASE WHEN PVN_CLAIM_NUMBER IS NOT NULL THEN 1 ELSE 0 END ) OVER (PARTITION BY prmtn_comp_idnt, supplier) =1 THEN 'PROFECTUS CLAIMED'
		WHEN max(CASE WHEN PRGX_CLAIM_NUMBER IS NOT NULL THEN 1 ELSE 0 END ) OVER (PARTITION BY prmtn_comp_idnt, supplier)=1 THEN 'PRGX CLAIMED'
		WHEN mode(ELI_MAX_RATE_CD_SUM) OVER (PARTITION BY prmtn_comp_idnt, supplier) > -300  THEN 'ELI_MAX_RATE_CD_SUM < 300'
		WHEN max(ifnull(PROMO_QTY,0)) OVER (PARTITION BY prmtn_comp_idnt, supplier) = 0 THEN 'PROMO_QTY = 0'
		ELSE 
			CASE 
				WHEN count(DISTINCT sku_id, ifnull(CLM_RATE ,0), ifnull(MAX_RATE,0), ifnull(UNIT_PRICE_TTL,0)) over(PARTITION BY prmtn_comp_idnt, supplier) = count(DISTINCT sku_id) over(PARTITION BY prmtn_comp_idnt, supplier) THEN concat('TO QA_NATIONAL_',PRMTN_TYPE_CDE,ifnull(DNA_ACTION,''),'_',CASE WHEN max( CASE WHEN CLM_QTY IS NOT NULL AND CLM_QTY != 0 THEN 1 ELSE 0 END ) OVER (PARTITION BY prmtn_comp_idnt, supplier) = 1 THEN 'WRONGRATE' ELSE 'ENTIRELY' END)
				ELSE concat('TO QA_STATE_',PRMTN_TYPE_CDE,ifnull(DNA_ACTION,''),'_',CASE WHEN max( CASE WHEN CLM_QTY IS NOT NULL THEN 1 ELSE 0 END ) OVER (PARTITION BY prmtn_comp_idnt, supplier) = 1 THEN 'WRONGRATE' ELSE 'ENTIRELY' END)
			END	
	END check_column 
	FROM filter_item
	WHERE filter_item = 'YES')
, WRONG_RATE_SCHEMA AS
	(SELECT a.*
	, CASE WHEN b.CHECK_COLUMN IS NULL THEN 
				CASE  
					WHEN max(CASE WHEN a.DNA_ACTION IS NOT NULL AND a.DNA_ACTION NOT IN ('START TO REVIEW 11/2023','QUERY CM') THEN 1 ELSE 0 end) OVER (PARTITION BY a.prmtn_comp_idnt, a.supplier) = 1 THEN 'DNA/START IN 2/2024'
					WHEN SUM(CASE WHEN a.CLM_QTY IS NULL THEN 0 ELSE a.CLM_QTY END) OVER (PARTITION BY a.prmtn_comp_idnt, a.supplier) < 0 THEN 'CLM_QTY < 0'
					WHEN MAX(CASE WHEN a.OVERLAP_STARTDATE!= 1 THEN 0 ELSE 1 END) over (PARTITION BY a.prmtn_comp_idnt, a.supplier) + MAX(CASE WHEN OVERLAP_ENDDATE!= 1 THEN 0 ELSE 1 END) over (PARTITION BY a.prmtn_comp_idnt, a.supplier) = 0 THEN 'OVERLAP'
					WHEN max(CASE WHEN a.PVN_CLAIM_NUMBER IS NOT NULL THEN 1 ELSE 0 END ) OVER (PARTITION BY a.prmtn_comp_idnt, a.supplier) =1 THEN 'PROFECTUS CLAIMED'
					WHEN max(CASE WHEN a.PRGX_CLAIM_NUMBER IS NOT NULL THEN 1 ELSE 0 END ) OVER (PARTITION BY a.prmtn_comp_idnt, a.supplier)=1 THEN 'PRGX CLAIMED'
					WHEN mode(a.ELI_MAX_RATE_CD_SUM) OVER (PARTITION BY a.prmtn_comp_idnt, a.supplier) > -300  THEN 'ELI_MAX_RATE_CD_SUM < 300'
					WHEN max(ifnull(a.PROMO_QTY,0)) OVER (PARTITION BY a.prmtn_comp_idnt, a.supplier) = 0 THEN 'PROMO_QTY = 0'
					ELSE 'ALL_FILTER_ITEM_ARE_NO' 
				END  
			ELSE b.check_column 
		END CHECK_COLUMN
	FROM filter_item a
	LEFT JOIN ( SELECT DISTINCT supplier, PRMTN_COMP_IDNT , check_column FROM check_column_filter) b
		ON a.supplier = b.supplier
		AND a.PRMTN_COMP_IDNT = b.PRMTN_COMP_IDNT
	--WHERE check_column IS NOT NULL 
	-- where a.PRMTN_COMP_IDNT  = '56026567'
	ORDER BY a.PRMTN_COMP_DTL_END_DT, a.PRMTN_COMP_DTL_SDT,a.SUPPLIER ,a.PRMTN_COMP_IDNT , a.sku_id,a.STATE)
SELECT * FROM WRONG_RATE_SCHEMA 
-- where supp_desc ilike '%philip morris%'