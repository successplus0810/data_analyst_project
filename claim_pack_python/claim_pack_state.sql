WITH QTY_JOIN AS 
(SELECT DISTINCT  a.*
	, CASE WHEN D.clm_end IS NOT NULL THEN concat('YES') ELSE NULL END CHECK_CO_ITEM
	,b.PVN_CLAIM_NUMBER
	,b.PVN_SUM_CLAIM
	,c.PRGX_CLAIM_NUMBER
	,c.PRGX_SUM_AMOUNTDUE
FROM COLES.STI_WIP_CS.PROMOQTY_ALL a
LEFT JOIN 
	(SELECT PRODUCT_NUMBER,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE, AGREED_SCAN_RATE,
		Listagg(distinct CLAIM_NUMBER, ',') WITHIN GROUP (ORDER BY CLAIM_NUMBER) AS PVN_CLAIM_NUMBER,
		SUM(ELIGIBLE_CLAIM) AS PVN_SUM_CLAIM 
		FROM COLES.PVN_CLAIMS.CT_CS_SCAN_PROF_DETAIL_MERGED_2 
	GROUP BY PRODUCT_NUMBER,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE,AGREED_SCAN_RATE) B
ON A.SKU_ID = B.PRODUCT_NUMBER
	AND A.CLM_START = B.EFFECTIVE_START_DATE
	AND A.CLM_END = B.EFFECTIVE_END_DATE
	AND a.clm_rate = b.AGREED_SCAN_RATE
LEFT JOIN 
	(SELECT ITEMID,STARTDATE,ENDDATE, AUTHORISEDFUNDINGUNIT,
	Listagg(distinct CLAIM_NO, ',') WITHIN GROUP (ORDER BY CLAIM_NO) AS PRGX_CLAIM_NUMBER, 
	SUM(AMOUNTDUE) AS PRGX_SUM_AMOUNTDUE
	FROM COLES.PRGX_CLAIMS.SCAN 
	GROUP BY ITEMID,STARTDATE,ENDDATE,AUTHORISEDFUNDINGUNIT)C
ON A.SKU_ID = C.ITEMID
	AND A.CLM_START = C.STARTDATE
	AND A.CLM_END = C.ENDDATE
	AND a.clm_rate = c.AUTHORISEDFUNDINGUNIT
LEFT JOIN 
	(SELECT DISTINCT item_idnt, CLM_START, CLM_END
	FROM COLES.STI_WIP_CS.CLAIM_DETAILS_SUMMED_all
	WHERE (upper(clm_code) LIKE '%PS%' OR  upper(clm_code) LIKE '%BS%'  OR  upper(clm_code) LIKE '%COLOTHER%')
	AND (clm_desc LIKE '%COLS%' OR CLM_DESC LIKE '%Coles Online%')
	AND LOWER(CLM_DESC) NOT LIKE '%rain%'
	AND CLM_END >='2021-5-1') D
ON a.sku_id = D.item_idnt
	AND (A.CLM_START BETWEEN  d.CLM_START AND d.CLM_END OR A.CLM_END BETWEEN  d.CLM_START AND d.CLM_END)
WHERE 
------------------------------ANALYST FILL HERE------------------------------------------------------
	-- A.clm_end BETWEEN '2022-1-4' AND '2022-1-4' AND
	-- to_char(A.clm_end,'YYYYMM') = '{}'	AND 
-----------------------------------------------------------------------------------------------------
	TOTAL_SALES_QTY > 0 
	and PRMTN_COMP_IDNT IS NOT NULL
    AND TRIM(PRMTN_COMP_IDNT) != ''
	and prmtn_comp_idnt = '55564790'
	and PRMTN_TYPE_CDE in ('SP','TH')
order by supplier, PRMTN_COMP_IDNT,sku_id,state)
SELECT * ,
CASE  
	WHEN max(CASE WHEN DNA_ACTION IS NOT NULL AND DNA_ACTION NOT IN ('START TO REVIEW 11/2023','QUERY CM') THEN 1 ELSE 0 end) OVER (PARTITION BY prmtn_comp_idnt, supplier) = 1 THEN 'DNA/START IN 2/2024'
	WHEN SUM(CLM_QTY) OVER (PARTITION BY prmtn_comp_idnt, supplier) <= 0 THEN 'CLM_QTY <= 0'
	WHEN MAX(CASE WHEN OVERLAP_PROMO!= 1 THEN 0 ELSE 1 END) over (PARTITION BY prmtn_comp_idnt, supplier) = 0 THEN 'OVERLAP'
	WHEN max(CASE WHEN CHECK_CO_ITEM = 'YES' THEN 1 ELSE 0 END ) OVER (PARTITION BY prmtn_comp_idnt, supplier) =1 THEN 'COLES ONLINE'
	WHEN max(CASE WHEN PVN_CLAIM_NUMBER IS NOT NULL THEN 1 ELSE 0 END ) OVER (PARTITION BY prmtn_comp_idnt, supplier) =1 THEN 'PROFECTUS CLAIMED'
	WHEN max(CASE WHEN PRGX_CLAIM_NUMBER IS NOT NULL  OR CHECK_PRGX = 'YES' THEN 1 ELSE 0 END ) OVER (PARTITION BY prmtn_comp_idnt, supplier)=1 THEN 'PRGX CLAIMED'
	WHEN mode(ELI_V2_FINAL) OVER (PARTITION BY prmtn_comp_idnt, supplier) < 300 AND PRMTN_TYPE_CDE = 'SP' THEN 'ELI_V2_FINAL < 300'
	WHEN mode(ELI_BM_FINAL) OVER (PARTITION BY prmtn_comp_idnt, supplier) < 300 AND PRMTN_TYPE_CDE = 'TH' THEN 'ELI_BM_FINAL < 300'
	ELSE 
		CASE 
			WHEN count(DISTINCT sku_id,clm_rate,promo_price) over(PARTITION BY prmtn_comp_idnt, supplier) = count(DISTINCT sku_id) over(PARTITION BY prmtn_comp_idnt, supplier) THEN concat('TO QA_NATIONAL_',PRMTN_TYPE_CDE,ifnull(DNA_ACTION,''))
			ELSE concat('TO QA_STATE_',PRMTN_TYPE_CDE,ifnull(DNA_ACTION,''))
		END	
END check_column 
FROM QTY_JOIN